- case: html_parser_css_first_without_default
  parametrized:
    - strict: True
    - strict: False
  main: |
    from selectolax.parser import HTMLParser
    parser = HTMLParser("")
    node = parser.css_first(query="", strict= {{ strict }})
    reveal_type(node) # N: Revealed type is "Union[selectolax.parser.Node, None]"

- case: html_parser_css_first_with_none_default
  parametrized:
    - strict: True
    - strict: False
  main: |
    from selectolax.parser import HTMLParser
    parser = HTMLParser("")
    node = parser.css_first(query="",default=None,strict= {{strict}})
    reveal_type(node) # N: Revealed type is "Union[selectolax.parser.Node, None]"

- case: html_parser_css_first_with_default
  parametrized:
    - strict: True
    - strict: False
  main: |
    from selectolax.parser import HTMLParser
    parser = HTMLParser("")
    node = parser.css_first(query="",default="", strict ={{strict}})
    reveal_type(node) # N: Revealed type is "Union[selectolax.parser.Node, builtins.str]"


- case: lexbor_node_css_first_without_default
  parametrized:
    - strict: True
    - strict: False
  main: |
    from selectolax.parser import HTMLParser
    parser = HTMLParser("")
    node = parser.root
    if node is not None:
      res = node.css_first(query="", strict ={{strict}})
      reveal_type(res) # N: Revealed type is "Union[selectolax.parser.Node, None]"

- case: lexbor_node_css_first_with_none_default
  parametrized:
    - strict: True
    - strict: False
  main: |
    from selectolax.parser import HTMLParser
    parser = HTMLParser("")
    node = parser.root
    if node is not None:
      res = node.css_first(query="",default=None, strict ={{strict}})
      reveal_type(res) # N: Revealed type is "Union[selectolax.parser.Node, None]"

- case: lexbor_node_css_first_with_default
  parametrized:
    - strict: True
    - strict: False
  main: |
    from selectolax.parser import HTMLParser
    parser = HTMLParser("")
    node = parser.root
    if node is not None:
      res = node.css_first(query="",default="", strict ={{strict}})
      reveal_type(res) # N: Revealed type is "Union[selectolax.parser.Node, builtins.str]"